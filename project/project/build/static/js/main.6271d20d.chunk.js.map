{"version":3,"sources":["initState.js","services.js","LoginButton.jsx","LogoutButton.jsx","AddItemButton.jsx","ItemsRenderer.jsx","filter.js","SearchBar.jsx","SearchChoices.jsx","CatesRenderer.jsx","AddItemBox.jsx","CartRenderer.jsx","TotalPriceRenderer.jsx","CheckoutButton.jsx","Cart.jsx","checkoutReducer.js","cartReducer.js","initCart.js","initData.js","CheckoutPage.jsx","loginReducer.js","LoginPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["initState","username","isLoading","error","isLoggedIn","fetchItemsRead","fetch","method","catch","Promise","reject","code","then","response","ok","json","result","message","LoginButton","dispatch","useContext","LoginContext","state","LoginStateContext","className","type","placeholder","onChange","e","payload","target","value","onClick","headers","Headers","body","JSON","stringify","data","console","log","LogoutButton","AddItemButton","id","CheckoutDataContext","CheckoutContext","items","addItemBox","ItemsRenderer","cate","keyWords","itemsArray","Object","keys","newItemsArray","forEach","element","itemName","replace","toLowerCase","indexOf","push","keyWordsFilter","itemCategory","cateFilter","map","item","src","picture","alt","height","width","itemUnitPrice","itemStock","itemId","SearchBar","loginDispatch","defaultValue","updateKeywords","SearchChoices","searchArea","clickCate","cates","searchBar","CatesRenderer","Category","showCategory","process","category","AddItemBox","addAmount","cartDispatch","CartContext","addItem","fetchOneAdd","cartItems","itemUnit","changeAmount","CartRenderer","CartStateContext","itemAmount","itemCount","itemPrice","TotalPriceRenderer","totalPrice","parseFloat","toFixed","CheckoutButton","checkout","order","fetchCheckout","Cart","useEffect","fetchAllRead","checkoutReducer","action","cartReducer","subTotal","itemsNumber","initCart","initData","React","createContext","CheckoutPage","useReducer","cart","addBox","Provider","loginReducer","LoginPage","menu","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6271d20d.chunk.js","sourcesContent":["\nconst initState = {\n    username: '',\n    isLoading: false,\n    error: '',\n    isLoggedIn: false,\n}\n\nexport default initState;","export const fetchLogIn = (username) => {\n    return fetch('/session', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({ username }),\n    })\n        .catch(() => {\n            return Promise.reject({ code: 'There is a networkerror' });\n        })\n        .then((response) => {\n\n            if (!response.ok) {\n                return response.json().then(\n                    result => Promise.reject(result.message)\n                );\n            }\n            return response.json();\n        });\n};\n\nexport const fetchLogout = () => {\n    return fetch('/session/', {\n        method: 'DELETE',\n    })\n        .catch(() => {\n            return Promise.reject({ code: 'There is a network-error' });\n        })\n        .then((response) => {\n            if (!response.ok) {\n                return response.json().then(result => Promise.reject(result.message));\n            }\n            return response;\n        });\n};\n\nexport const fetchAllRead = (username) => {\n    return fetch('/orders/' + username, {\n        method: 'GET',\n    })\n        .catch(() => {\n            return Promise.reject({ code: 'There is a network-error' });\n        })\n        .then((response) => {\n            if (!response.ok) {\n                return response.json().then(result => Promise.reject(result.message));\n            }\n            return response.json();\n        });\n};\n\nexport const fetchOneAdd = (username, itemId, addAmount) => {\n    return fetch('/orders/' + username, {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({\n            item: {\n                username: username,\n                itemId: itemId,\n                addAmount: addAmount,\n            }\n        }),\n    })\n        .catch(() => {\n            return Promise.reject({ code: 'There is a networkerror' });\n        })\n        .then((response) => {\n            if (!response.ok) {\n                return response.json().then(\n                    result => Promise.reject(result.message)\n                );\n            }\n            return response.json();\n        });\n};\n\nexport const fetchCheckout = (username, cartItems) => {\n    return fetch('/orders/' + username, {\n        method: 'PUT',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({ order: cartItems }),\n    })\n        .catch(() => {\n            return Promise.reject({ code: 'There is a networkerror' });\n        })\n        .then((response) => {\n\n            if (!response.ok) {\n                return response.json().then(\n                    result => Promise.reject(result.message)\n                );\n            }\n            return response.json();\n        });\n};\n\nexport const fetchItemsRead = () => {\n    return fetch('/items/', {\n        method: 'GET',\n    })\n        .catch(() => {\n            return Promise.reject({ code: 'There is a network-error' });\n        })\n        .then((response) => {\n            if (!response.ok) {\n                return response.json().then(result => Promise.reject(result.message));\n            }\n            return response.json();\n        });\n};\n\nexport const fetchCatesRead = () => {\n    return fetch('/items/categories', {\n        method: 'GET',\n    })\n        .catch(() => {\n            return Promise.reject({ code: 'There is a network-error' });\n        })\n        .then((response) => {\n            if (!response.ok) {\n                return response.json().then(result => Promise.reject(result.message));\n            }\n            return response.json();\n        });\n};","import React, { useContext } from 'react';\nimport { LoginContext, LoginStateContext } from './LoginPage';\nimport { fetchLogIn } from './services';\n\nfunction LoginButton() {\n    const dispatch = useContext(LoginContext);\n    const state = useContext(LoginStateContext);\n\n\n    function inputUsername(e) {\n        dispatch({\n            type: 'input',\n            payload: { username: e.target.value }\n        });\n    }\n\n    const login = () => {\n        dispatch({\n            type: 'login',\n        });\n        fetchLogIn(state.username)\n            .then((response) => {\n                dispatch({\n                    type: 'success',\n                    payload: { username: response.data.username }\n                });\n\n            })\n            .catch((error) => {\n                console.log(error);\n                dispatch({\n                    type: 'error',\n                    payload: { error: error }\n                });\n            });\n    }\n\n    return (\n\n        <div className=\"login-box\">\n            <h2>Null Foods Market</h2>\n            <div className=\"user-box\">\n                <input type=\"text\" placeholder=\"Input Your Username\" onChange={inputUsername} />\n                <label>Username</label>\n            </div>\n            <a onClick={login}>\n                Login\n            </a>\n        </div>\n\n\n    )\n}\n\nexport default LoginButton;","import React, { useContext } from 'react';\nimport { LoginContext } from './LoginPage';\nimport { fetchLogout } from './services';\n\nfunction LogoutButton() {\n    const dispatch = useContext(LoginContext);\n\n    const logout = () => {\n        fetchLogout()\n            .then(() => {\n                dispatch({\n                    type: 'logout',\n                })\n            })\n            .catch((error) => {\n                dispatch({\n                    type: 'logout',\n                })\n                dispatch({\n                    type: 'error',\n                    payload: { error: error }\n                });\n            });\n    }\n\n    return (\n        <button className=\"logout-button\" onClick={logout}> Logout </button>\n    )\n}\n\nexport default LogoutButton;","import React, { useContext } from 'react';\nimport { CheckoutContext, CheckoutDataContext } from './CheckoutPage';\n\nfunction AddItemButton(id) {\n    const data = useContext(CheckoutDataContext);\n    const dispatch = useContext(CheckoutContext);\n    const { items, addItemBox } = data;\n\n    const showAddBox = () => {\n        dispatch({\n            type: 'showAddBox',\n            payload: {\n                items: [items[id.id]],\n            }\n        });\n    }\n\n    if (addItemBox) {\n        return (\n            <span></span>\n        )\n    }\n\n    return (\n        <div className=\"product-social-icons\">\n            <span onClick={showAddBox}> Add to Cart </span>\n        </div>\n    )\n}\n\nexport default AddItemButton;","import React, { useContext } from 'react'\nimport AddItemButton from './AddItemButton';\nimport { CheckoutDataContext } from './CheckoutPage';\nimport { cateFilter, keyWordsFilter } from './filter';\n\nconst ItemsRenderer = () => {\n    const data = useContext(CheckoutDataContext);\n\n    const { items, cate, keyWords } = data;\n    let itemsArray = Object.keys(items);\n    itemsArray = cateFilter(cate, itemsArray, items);\n    itemsArray = keyWordsFilter(keyWords, itemsArray, items);\n\n    return (\n        itemsArray.map(item => (\n\n            <div className=\"product-card\">\n\n                <img className=\"product-image\" src={items[item].picture} alt=\"Product\" height=\"180\" width=\"170\" />\n                <div className=\"product-image-title\">\n                    <p>Unit Price: ${items[item].itemUnitPrice}</p>\n                    <p>Stock: {items[item].itemStock}</p>\n                </div>\n                <div className=\"product-description\">\n                    <h5> {items[item].itemName}</h5>\n                </div>\n                <AddItemButton id={items[item].itemId} />\n            </div>\n        )));\n}\n\nexport default ItemsRenderer;\n","export function cateFilter(cate, itemsArray, items) {\n    let newItemsArray = [];\n    if (cate !== '') {\n        itemsArray.forEach(element => {\n            if (items[element].itemCategory === cate) {\n                newItemsArray.push(element);\n            }\n        });\n        itemsArray = newItemsArray;\n    }\n    return itemsArray;\n}\n\nexport function keyWordsFilter(keyWords, itemsArray, items) {\n    let newItemsArray = [];\n    if (keyWords !== '') {\n        console.log(keyWords);\n\n        itemsArray.forEach(element => {\n            console.log(items[element].itemName.replace(/\\s+/g, '').toLowerCase().indexOf(keyWords));\n\n            if (items[element].itemName.replace(/\\s+/g, '').toLowerCase().indexOf(keyWords) >= 0) {\n                newItemsArray.push(element);\n            }\n        });\n        itemsArray = newItemsArray;\n        console.log(itemsArray);\n    }\n    return itemsArray;\n}\n\n","import React, { useContext } from 'react';\nimport { LoginContext } from './LoginPage';\nimport { CheckoutContext, CheckoutDataContext } from './CheckoutPage';\n\nimport { fetchItemsRead } from './services';\n\nfunction SearchBar() {\n    const data = useContext(CheckoutDataContext);\n    const { keyWords } = data;\n    const dispatch = useContext(CheckoutContext);\n    const loginDispatch = useContext(LoginContext);\n\n    function updateKeywords(e) {\n        dispatch({\n            type: 'inputKeyWords',\n            payload: {\n                keyWords: e.target.value,\n            }\n        });\n    }\n\n    function search() {\n        fetchItemsRead()\n            .then((response) => {\n                dispatch({\n                    type: 'showItemsOfKeyWords',\n                    payload: {\n                        items: response.data,\n                    }\n                });\n            })\n            .catch((error) => {\n                loginDispatch({\n                    type: 'error',\n                    payload: { error: error }\n                });\n            });\n    }\n\n    return (\n        <div className=\"search-bar\">\n            <input defaultValue={keyWords} onChange={(e) => { updateKeywords(e) }} />\n            <button onClick={() => { search() }}> Search </button>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React, {useContext } from 'react';\nimport {LoginContext } from './LoginPage';\nimport { CheckoutContext, CheckoutDataContext } from './CheckoutPage';\nimport { fetchItemsRead, fetchCatesRead} from './services';\nimport SearchBar from './SearchBar';\n\nfunction SearchChoices() {\n    const loginDispatch = useContext(LoginContext);\n    const data = useContext(CheckoutDataContext);\n    const dispatch = useContext(CheckoutContext);\n    const {  searchBar } = data;\n    let searchArea = '';\n\n    function clickCate(){\n        fetchCatesRead()\n                .then((response) => {\n                    dispatch({\n                        type: 'showCates', \n                        payload: { cates: response.data }\n                    });\n                })\n                .catch((error) => {\n                    loginDispatch({\n                        type: 'error', \n                        payload: { error: error }\n                    });\n                });\n    }\n\n    function clickKey(){\n        dispatch({\n            type: 'showSearchBar', \n        });\n    }\n\n    function clickPics(){\n        fetchItemsRead()\n        .then((response) => {\n            dispatch({\n                type: 'showItems',\n                payload: { \n                    items: response.data,\n                 }\n            });\n        })\n        .catch((error) => {\n            loginDispatch({\n                type: 'error', \n                payload: { error: error.message }\n            });\n        });\n    }\n\n    if(searchBar){\n        searchArea = <SearchBar/>\n    }\n    return (\n<div className=\"search-options\">\n    <button onClick={()=>{clickCate()}}>Search By Categories</button>\n    <button onClick={()=>{clickKey()}}>Search By Key Words</button>\n    <button onClick={()=>{clickPics()}}>Search By Pictures</button>\n    {searchArea}\n</div>\n        )\n}\n\nexport default SearchChoices;","import React, { useContext } from 'react'\nimport { fetchItemsRead } from './services';\nimport { CheckoutContext, CheckoutDataContext } from './CheckoutPage';\nimport { LoginContext } from './LoginPage';\n\n\nconst CatesRenderer = () => {\n    const loginDispatch = useContext(LoginContext);\n    const data = useContext(CheckoutDataContext);\n    const dispatch = useContext(CheckoutContext);\n    const { cates } = data;\n\n    let catesArray = Object.keys(cates);\n\n    function showCategory(Category) {\n        fetchItemsRead()\n            .then((response) => {\n                dispatch({\n                    type: 'showItemsOfCate',\n                    payload: {\n                        items: response.data,\n                        cate: Category,\n                    }\n                });\n                loginDispatch({\n                    type: 'error',\n                    payload: {\n                        error: '',\n                    }\n                })\n            })\n            .catch((error) => {\n                loginDispatch({\n                    type: 'error',\n                    payload: {\n                        error: error,\n                    }\n                })\n            });\n    }\n\n\n    return (\n        catesArray.map(Category => (\n            <div className=\"product-card\" onClick={() => { showCategory(Category) }}>\n\n                <img className=\"product-image\" src={process.env.PUBLIC_URL + cates[Category].picture} alt=\"Category\" height=\"180\" width=\"170\" />\n\n                <div className=\"product-description\">\n                    <h5> {cates[Category].category}</h5>\n                </div>\n            </div>\n        )));\n}\n\nexport default CatesRenderer;","import React, { useContext } from 'react';\nimport { LoginContext, LoginStateContext } from './LoginPage';\nimport { CheckoutContext, CheckoutDataContext, CartContext } from './CheckoutPage';\nimport { fetchOneAdd } from './services';\n\n\nfunction AddItemBox() {\n    const state = useContext(LoginStateContext);\n    const loginDispatch = useContext(LoginContext);\n\n    const data = useContext(CheckoutDataContext);\n    const dispatch = useContext(CheckoutContext);\n    const { items, addAmount } = data;\n    const { username } = state;\n    const cartDispatch = useContext(CartContext);\n\n    function changeAmount(e) {\n        dispatch({\n            type: 'updateAddAmount',\n            payload: { addAmount: e.target.value }\n        });\n    }\n\n    function addItem(itemId) {\n        fetchOneAdd(username, itemId, addAmount)\n            .then((response) => {\n                cartDispatch({\n                    type: 'showItems',\n                    payload: {\n                        cartItems: response.data,\n                    }\n                });\n                dispatch({\n                    type: 'showAddBox',\n                    payload: {\n                        items: items,\n                    }\n                })\n                loginDispatch({\n                    type: 'error',\n                    payload: {\n                        error: '',\n                    }\n                })\n            })\n            .catch((error) => {\n                loginDispatch({\n                    type: 'error',\n                    payload: {\n                        error: error,\n                    }\n                })\n            });\n    }\n\n    return (\n        <div className=\"add-item\">\n            Amount: <input placeholder={items[0].itemUnit} value={addAmount} onChange={(e) => changeAmount(e)} />\n            <button onClick={() => addItem(items[0].itemId)}>Add</button>\n        </div>\n    )\n}\n\nexport default AddItemBox;","import React, { useContext } from 'react';\nimport { CartStateContext } from './CheckoutPage';\n\nfunction CartRenderer() {\n    const cart = useContext(CartStateContext);\n    const { cartItems } = cart;\n    if (cartItems !== '') {\n        return (\n            cartItems.map(item => (\n                <li>\n                    <div className=\"item\">\n                        <div className=\"item-name\">\n                            {item.itemName}\n                        </div>\n\n                        <div className=\"item-amount\">\n                            {item.itemAmount} {item.itemCount}\n                        </div>\n                            @\n                            <div className=\"item-unit-price\">\n                            ${item.itemUnitPrice}/{item.itemUnit}\n                        </div>\n                        <div className=\"item-price\">\n                            ${item.itemPrice}\n                        </div>\n                    </div>\n                </li>))\n        );\n    }\n    return (\n        <div></div>\n    );\n}\n\nexport default CartRenderer;","import React, { useContext } from 'react';\nimport { CartStateContext } from './CheckoutPage';\n\nfunction TotalPriceRenderer() {\n    const cart = useContext(CartStateContext);\n    const { cartItems } = cart;\n    if (cartItems !== '') {\n        let totalPrice = 0;\n        cartItems.forEach(element => {\n            totalPrice = parseFloat(totalPrice) + parseFloat(element.itemPrice)\n        });\n        totalPrice = totalPrice.toFixed(2);\n        return (\n            <div className=\"total-price\">Total: ${totalPrice}\n            </div>\n        );\n    }\n    return (\n        <div></div>\n    );\n}\n\nexport default TotalPriceRenderer;","import React, { useContext } from 'react';\nimport { LoginStateContext } from './LoginPage';\nimport { CheckoutContext, CartStateContext, CartContext } from './CheckoutPage';\nimport { fetchCheckout } from './services';\n\nfunction CheckoutButton() {\n    const state = useContext(LoginStateContext);\n    const dispatch = useContext(CheckoutContext);\n    const { username } = state;\n    const cart = useContext(CartStateContext);\n    const { cartItems } = cart;\n    const cartDispatch = useContext(CartContext);\n\n    function checkout() {\n        fetchCheckout(username, cartItems)\n            .then((response) => {\n                cartDispatch({\n                    type: 'showItems',\n                    payload: {\n                        cartItems: response.data,\n                    }\n                });\n                dispatch({\n                    type: 'showSearchBar',\n                })\n            })\n    }\n\n    return (\n        <div className=\"checkout-button\">\n            <button onClick={() => checkout()}>Checkout</button>\n        </div>\n    )\n}\n\nexport default CheckoutButton;","import React, { useEffect, useContext } from 'react';\nimport { fetchAllRead } from './services';\nimport { LoginContext, LoginStateContext } from './LoginPage';\nimport { CartContext } from './CheckoutPage';\nimport RenderCart from './CartRenderer';\nimport RenderTotal from './TotalPriceRenderer';\nimport CheckoutButton from './CheckoutButton';\n\n\nfunction Cart() {\n    const state = useContext(LoginStateContext);\n    const { username } = state;\n    const loginDispatch = useContext(LoginContext);\n    const cartDispatch = useContext(CartContext);\n\n    useEffect(() => {\n        fetchAllRead(username)\n            .then((response) => {\n                cartDispatch({\n                    type: 'showItems',\n                    payload: {\n                        cartItems: response.data,\n                    }\n                });\n            })\n            .catch((error) => {\n                loginDispatch({\n                    type: 'error',\n                    payload: { error: error }\n                });\n            });\n    }, [cartDispatch,username, loginDispatch]);\n\n    return (\n        <div className=\"cart\">\n            <p>Your Cart</p>\n            <RenderCart />\n            <RenderTotal />\n            <div className=\"checkout-button\">\n                <CheckoutButton />\n            </div>\n        </div>\n\n    )\n}\n\nexport default Cart;","function checkoutReducer(state, action) {\n    switch (action.type) {\n        case 'showCates':\n            return {\n                ...state,\n                cates: action.payload.cates,\n                cate: '',\n                items: '',\n                keyWords: '',\n                searchBar: false,\n                addItemBox: false,\n            }\n        case 'showItems':\n            return {\n                ...state,\n                items: action.payload.items,\n                cate: '',\n                cates: '',\n                keyWords: '',\n                searchBar: false,\n                addItemBox: false,\n            }\n        case 'showItemsOfCate':\n            return {\n                ...state,\n                items: action.payload.items,\n                cate: action.payload.cate,\n                cates: '',\n                keyWords: '',\n                searchBar: false,\n                addItemBox: false,\n            }\n        case 'showItemsOfKeyWords':\n            return {\n                ...state,\n                items: action.payload.items,\n                cate: '',\n                cates: '',\n                searchBar: true,\n                addItemBox: false,\n            }\n        case 'showSearchBar':\n            return {\n                ...state,\n                items: '',\n                cate: '',\n                cates: '',\n                keyWords: '',\n                searchBar: true,\n                addItemBox: false,\n            }\n        case 'inputKeyWords':\n            return {\n                ...state,\n                cate: '',\n                cates: '',\n                keyWords: action.payload.keyWords,\n                searchBar: true,\n                addItemBox: false,\n            }\n        case 'showAddBox':\n            return {\n                ...state,\n                items: action.payload.items,\n                cate: '',\n                cates: '',\n                keyWords: '',\n                addAmount: 0,\n                searchBar: false,\n                addItemBox: true,\n            }\n        case 'updateAddAmount':\n            return {\n                ...state,\n                cate: '',\n                cates: '',\n                keyWords: '',\n                addAmount: action.payload.addAmount,\n                searchBar: false,\n                addItemBox: true,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default checkoutReducer;","function cartReducer(state, action) {\n    switch (action.type) {\n        case 'showItems':\n            return {\n                ...state,\n                cartItems: action.payload.cartItems,\n                subTotal: '',\n                itemsNumber: 0,\n            }\n            default:\n                return state;\n        }\n}\n\nexport default cartReducer;","const initCart = {\n    cartItems: '',\n    subTotal: '',\n    itemsNumber: 0,\n}\nexport default initCart;","const initData = {\n    cates: '',\n    items: '',\n    cate: '',\n    keyWords: '',\n    searchBar: false,\n    addItemBox: false,\n    addAmount: 0,\n}\n\nexport default initData;","import React, { useContext, useReducer, useEffect } from 'react';\nimport { LoginContext, LoginStateContext } from './LoginPage';\nimport { fetchItemsRead } from './services';\nimport LogoutButton from './LogoutButton';\nimport RenderItems from './ItemsRenderer';\nimport SearchChoices from './SearchChoices'\nimport RenderCates from './CatesRenderer';\nimport AddItem from './AddItemBox';\nimport Cart from './Cart';\nimport checkoutReducer from './checkoutReducer';\nimport cartReducer from './cartReducer';\nimport initCart from './initCart';\nimport initData from './initData';\n\nexport const CheckoutDataContext = React.createContext();\nexport const CheckoutContext = React.createContext();\nexport const CartStateContext = React.createContext();\nexport const CartContext = React.createContext();\n\nfunction CheckoutPage() {\n    const state = useContext(LoginStateContext);\n    const { username } = state;\n    const [data, dispatch] = useReducer(checkoutReducer, initData);\n    const { addItemBox } = data;\n    const [cart, cartDispatch] = useReducer(cartReducer, initCart);\n    const loginDispatch = useContext(LoginContext);\n\n    useEffect(() => {\n        fetchItemsRead()\n            .then((response) => {\n                dispatch({\n                    type: 'showItems',\n                    payload: {\n                        items: response.data,\n                    }\n                });\n            })\n            .catch((error) => {\n                loginDispatch({\n                    type: 'error',\n                    payload: {\n                        error: error,\n                    }\n                })\n            });\n    }, [loginDispatch]);\n\n\n    let addBox = '';\n    if (addItemBox) {\n        addBox = (\n            <AddItem />\n        )\n    }\n\n    return (\n        <div className=\"content\">\n            <CheckoutContext.Provider value={dispatch}>\n                <CheckoutDataContext.Provider value={data}>\n                    <CartContext.Provider value={cartDispatch}>\n                        <CartStateContext.Provider value={cart}>\n\n                            <div className=\"products-interface\">\n                                <p className=\"title-text\">Explore Products</p>\n                                <SearchChoices />\n                                <RenderCates />\n                                <RenderItems />\n                                {addBox}\n                            </div>\n\n                            <div className=\"cart-interface\">\n                                User: {username}\n                                <LogoutButton />\n                                <Cart />\n                            </div>\n\n                        </CartStateContext.Provider>\n                    </CartContext.Provider>\n                </CheckoutDataContext.Provider>\n            </CheckoutContext.Provider>\n        </div>\n    )\n}\n\nexport default CheckoutPage;\n","function loginReducer(state, action) {\n    switch (action.type) {\n        case 'login':\n            return {\n                ...state,\n                isLoading: true,\n                error: '',\n            }\n        case 'logout':\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                error: '',\n                isLoading: false,\n            }\n        case 'success':\n            return {\n                ...state,\n                username: action.payload.username,\n                isLoggedIn: true,\n                isLoading: false,\n            }\n        case 'error':\n            return {\n                ...state,\n                error: action.payload.error,\n                isLoading: false,\n            }\n        case 'input':\n            return {\n                ...state,\n                username: action.payload.username,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default loginReducer;","import React, { useReducer } from 'react';\nimport initState from './initState';\nimport LoginButton from './LoginButton';\nimport CheckoutPage from './CheckoutPage';\nimport loginReducer from './loginReducer';\n\nexport const LoginContext = React.createContext();\nexport const LoginStateContext = React.createContext();\n\nfunction LoginPage() {\n    const [state, dispatch] = useReducer(loginReducer, initState);\n    const { error, isLoggedIn } = state;\n\n\n    let menu = (\n        <div className=\"login\">\n            <LoginContext.Provider value={dispatch}>\n                <LoginStateContext.Provider value={state}>\n                    <div className=\"login-area\">\n                    <div className=\"error-message\">{error}</div>\n                    <p className=\"title-text\">Welcome to Null Foods Market!</p>\n                    <LoginButton />\n                    </div>\n                </LoginStateContext.Provider>\n            </LoginContext.Provider>\n        </div>)\n\n    if (isLoggedIn) {\n        menu = (\n            <LoginContext.Provider value={dispatch}>\n                <LoginStateContext.Provider value={state}>\n                    <div className=\"error-message\">{error}</div>\n                    <CheckoutPage />\n                </LoginStateContext.Provider>\n            </LoginContext.Provider>)\n    }\n    return (\n        <div>\n            {menu}\n        </div>\n    )\n}\n\nexport default LoginPage;","import React from 'react';\nimport './App.css';\nimport LoginPage from './LoginPage';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <LoginPage/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}